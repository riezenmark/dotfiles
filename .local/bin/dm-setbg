#!/usr/bin/env bash
#
# Script name: dm-setbg
# Description: A wallpaper setting utility using dmenu, imv and swaybg/xwallpaper
# Dependencies: dmenu, fzf, rofi, xwallpaper or swaybg, imv
# GitLab: https://www.gitlab.com/dwt1/dmscripts
# License: https://www.gitlab.com/dwt1/dmscripts/LICENSE
# Contributors: Murtaza Udaipurwala
#               HostGrady
#               Simon Ingelsson
#               Derek Taylor

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.
set -euo pipefail

# shellcheck disable=SC1091
source ~/.local/bin/_dm-helper.sh 2>/dev/null || source _dm-helper.sh 2>/dev/null

source_dmscripts_configs

if configs_are_different; then
    echo "$(date): configs are different" >>"$DM_CONFIG_DIFF_LOGFILE"
    sleep 1
fi

# Set wallpaper using either xwallpaper or swaybf
setbg() {
    case "$XDG_SESSION_TYPE" in
    'x11') xwallpaper --stretch "$1" ;;
    'wayland') swaybg -m "stretch" -i "$1" ;;
    *) err "Unknown display server" ;;
    esac
}

main() {
    choice="$(printf "Random\nSet\nExit" | ${MENU} "What would you like to do?")"
    case "$choice" in
    "Set")
        # shellcheck disable=SC2154
        if [ "$use_imv" = 0 ]; then
            # shellcheck disable=SC2154
            wallpaper="$(sxiv -t -o "${setbg_dir}")"
        fi
        ;;
    "Random")
        valid_paper="No"
        until [ "$valid_paper" = "Yes" ]; do
            pidof "swaybg" && killall "swaybg"
            pidof "xwallpaper" && killall "xwallpaper"
            wallpaper="$(find "${setbg_dir}" -type f | shuf -n 1)"
            setbg "$wallpaper" &
            echo "$wallpaper" >"$HOME/.cache/wall"
            sudo /bin/cp $wallpaper /usr/share/sddm/themes/sugar-candy/Backgrounds/Current.jpg
            valid_paper="$(printf "No\nYes" | ${MENU} "Do you like the new wallpaper?")"
        done
        ;;
    "Exit") echo "Program terminated" && exit 1 ;;
    *) err "Invalid choice" ;;
    esac
}

MENU="$(get_menu_program "$@")"
[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main

